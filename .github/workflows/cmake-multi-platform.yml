---
name: CMake on multiple platforms

on:
  push:
    branches: 
    - master
    - feature/*
  pull_request:
    branches: ["develop"]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-13, windows-latest]
        build_type: [Debug, Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            generator: 'NMake Makefiles'
          - os: ubuntu-latest
            c_compiler: gcc
            generator: 'Unix Makefiles'
          - os: ubuntu-latest
            c_compiler: clang
            generator: 'Unix Makefiles'
          - os: macos-13
            c_compiler: gcc
            generator: 'Unix Makefiles'
          - os: macos-13
            c_compiler: clang
            generator: 'Unix Makefiles'
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: macos-13
            c_compiler: cl

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: 'true'
      - uses: seanmiddleditch/gha-setup-ninja@master

      - name: Visual Studio toolchain environment
        uses: TheMrMilchmann/setup-msvc-dev@v1
        if: matrix.os == 'windows-latest'
        with:
          arch: x64

      - name: Set environment variables for Windows
        if: matrix.os == 'windows-latest'
        run: |
          echo "CMAKE_C_FLAGS=/W3" >> $GITHUB_ENV
          echo "CMAKE_CXX_FLAGS=/W3" >> $GITHUB_ENV

      - name: Configure CMake
        run: >
          cmake -B build
          -D CMAKE_C_COMPILER=${{ matrix.c_compiler }}
          -D CMAKE_BUILD_TYPE=${{ matrix.build_type }}
          -D CMAKE_INSTALL_PREFIX=/tmp/install
          -D CMAKE_C_FLAGS="${{ env.CMAKE_C_FLAGS }}"
          -D CMAKE_CXX_FLAGS="${{ env.CMAKE_CXX_FLAGS }}"
          -S ${{ github.workspace }}
          -G "${{ matrix.generator }}"

      - name: Build
        run: cmake --build build --config ${{ matrix.build_type }}

      - name: Test
        run: ctest --test-dir build --build-config ${{ matrix.build_type }} --verbose --output-on-failure
